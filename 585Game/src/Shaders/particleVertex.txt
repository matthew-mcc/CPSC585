#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec2 aTexCoords;

out vec2 TexCoords;
out vec4 ParticleColor;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;
uniform vec4 color;

uniform vec3 particleCenter;
uniform vec3 camRight;
uniform vec3 camUp;

uniform float xRes;
uniform float yRes;

uniform float scale;

uniform bool screenSpace;

void main()
{
    TexCoords = aTexCoords;
    ParticleColor = color;
    if (!screenSpace) {
        vec3 vertPosWorldSpace = particleCenter + camRight*aPos.x*scale + camUp*aPos.y*scale;
        gl_Position = projection * view * model * vec4(vertPosWorldSpace, 1.0);
    }
    else {
        gl_Position = projection * view * model * vec4(particleCenter, 1.0);
        gl_Position /= gl_Position.w;
        gl_Position.xy += vec2(0.0, scale * (1080 / yRes)) + aPos.xy * vec2(-0.03 * (1920.0 / xRes), 0.05 * (1080 / yRes));
    }
}